name: Publish

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install
        run: npm ci
      - name: Test
        run: npm test
      - name: Publish (Latest)
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          npm run publish -- --conventional-graduate --yes
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Publish (Next)
        if: github.ref == 'refs/heads/dev'
        run: |
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          npm run publish -- --conventional-prerelease --yes
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Build
        run: npm run build:docs
      - name: Deploy Next Docs
        if: github.ref == 'refs/heads/dev'
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=packages/react-magma-docs/public --alias next
      - name: Deploy Latest Docs
        if: github.ref == 'refs/heads/main'
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=packages/react-magma-docs/public --alias latest
      - name: Create Pull Request
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: merge changes from publish into dev'
          committer: GitHub <noreply@github.com>
          author: actions-bot <actions-bot@users.noreply.github.com>
          title: 'chore: merge changes from publish into dev'
          branch: dev
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
